name: CI Build

on:
  push:
    branches:
      - mq2
  pull_request:
    branches:
      - mq2

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Repository auschecken
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive  # wichtig, falls du Submodule verwendest

      # 2Ô∏è‚É£ Python einrichten
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3Ô∏è‚É£ ESP-IDF einrichten
      - name: Set up ESP-IDF
        uses: espressif/install-esp-idf-action@v1
        with:
          version: v5.3.2

      # 4Ô∏è‚É£ Cache f√ºr Tools und Build-Artefakte
      - name: Cache ESP-IDF tools and build output
        uses: actions/cache@v4
        with:
          path: |
            ~/.espressif
            build
          key: ${{ runner.os }}-idf-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-idf-

      # 7Ô∏è‚É£ Build vorbereiten
      - name: Initialize project
        run: idf.py reconfigure

      # 8Ô∏è‚É£ Projekt bauen
      - name: Build project
        run: idf.py build

      # 9Ô∏è‚É£ Firmware in firmware/ Ordner kopieren
      - name: Copy firmware to firmware folder
        run: |
          mkdir -p firmware
          cp build/*.bin firmware/
          cp -r build/bootloader firmware/bootloader || true
          cp -r build/partition_table firmware/partition_table || true

      # üîü Git Config f√ºr Action
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Commit & Push Firmware
      - name: Commit firmware binaries
        run: |
          git add firmware/
          git commit -m "Update firmware binaries [skip ci]" || echo "No changes to commit"
          git push